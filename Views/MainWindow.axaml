<!-- Views/MainWindow.axaml -->
<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:PixelWallE.ViewModels"  
        xmlns:ctrl="using:PixelWallE.Controls"
        xmlns:avedit="clr-namespace:AvaloniaEdit;assembly=AvaloniaEdit"
        xmlns:rend="clr-namespace:AvaloniaEdit.Rendering;assembly=AvaloniaEdit"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="1366" d:DesignHeight="768"
        Width="1050" Height="705"
        x:Class="PixelWallE.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/walle.png"
        Title="Pixel Wall-E"
        TransparencyLevelHint="None"
        SystemDecorations="None"
        CanResize="True"
        ExtendClientAreaToDecorationsHint="True"
        WindowStartupLocation="CenterScreen">
    
    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext please modify the App.axaml.cs file. -->
        <vm:MainWindowViewModel />
    </Design.DataContext>
   <Grid RowDefinitions="Auto,*,Auto" Background="{DynamicResource ResourceKey=PrimaryBackgroundGradient}">
        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Left" Spacing="10" Margin="0,0,10,0">
                <!-- Add Load/Save later -->
                <Button  Content="Save" Command="{Binding SaveCodeAsyncCommand}" Background="{DynamicResource ResourceKey=ButtonGradient}"/> 
                <Button  Content="Load" Command="{Binding LoadCodeAsyncCommand}" Background="{DynamicResource ResourceKey=ButtonGradient}"/> 
        </StackPanel>
        <StackPanel Grid.Row="0"  HorizontalAlignment="Center" Orientation="Horizontal" Spacing="10" Margin="0,0,10,0">
            <TextBlock Text="Canvas Size:" VerticalAlignment="Center"/>
            <NumericUpDown Value="{Binding CanvasSize}" Minimum="8" Maximum="256" Increment="1" Width="120"/>
            <Button Content="↺ Resize | Clear" Background="{DynamicResource ResourceKey=ButtonGradient}" Command="{Binding ApplyResizeCommand}"/>
        </StackPanel> 
        <StackPanel Grid.Row="0" Orientation="Horizontal" Spacing="-5" VerticalAlignment="Top" HorizontalAlignment="Right">
            <Button Content="🗕" Padding="6,2" Width="30" Background="Transparent" Height="25" Margin="5,0" Click="MinimizeWindow"/>
            <Button Content="🗖" Padding="6,2" Width="30" Background="Transparent" Height="25" Margin="5,0" Click="MaximizeWindow"/>
            <Button Content="✕" Padding="6,2" Width="30" Background="Transparent" Height="25" Margin="5,0" Click="CloseWindow"/>
        </StackPanel>
        

        <Grid Grid.Row="1" ColumnDefinitions="Auto,*">
        
            <Grid Grid.Column="0" RowDefinitions="Auto,*" Background="{DynamicResource ResourceKey=PanelGradient}">
                <Border Grid.Row="0" Padding="5" Margin="10,0">
                    <Grid RowDefinitions="Auto">
                        <Label Padding="10" Grid.Row="0">
                            <Image Source="avares://PixelWallE/Assets/pixeldroid.png" VerticalAlignment="Top" HorizontalAlignment="Center" Width="250" Height="200"></Image>
                        </Label>
                    </Grid>
                </Border>
                 <!-- Left Panel: Text Editor (Basic for now) -->
                <Grid Grid.Row="1" RowDefinitions="Auto,*" Margin="0,0,0,10">
                    <Button Grid.Row="0" Content="⏏️ Run"  Width="100" Height="20" Padding="3,0" Margin="10,0" HorizontalAlignment="Left" Background="{DynamicResource ResourceKey=ButtonGradient}" Command="{Binding ExecuteCodeCommand}"/>
                    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" Spacing="5" Margin="10,0">
                      <TextBlock Text="Delay (ms):" VerticalAlignment="Center"/>
                      <NumericUpDown Value="{Binding DrawDelay}" Minimum="0" Maximum="100"  Increment="10" Height= "20" Width="125"/>
                    </StackPanel>
                    <Border Grid.Row="1"
                            BorderThickness="1"
                            BorderBrush="DarkGray"
                            Background="#0d031c"
                            CornerRadius="8"
                            MinWidth="425"
                            Margin="0,0,10,0">
                        <avedit:TextEditor
                            x:Name="CodeEditor"
                            FontFamily="Consolas,Menlo,Monospace"
                            FontSize="13"
                            Foreground="#D3D3D3"
                            Background="Transparent"
                            ShowLineNumbers="True"
                            LineNumbersForeground="#6e5689"
                            Padding="5,0" 
                            BorderThickness="0"
                            WordWrap="False"
                            HorizontalScrollBarVisibility="Auto"
                            VerticalScrollBarVisibility="Auto"
                            SyntaxHighlighting="XML" /> <!-- No binding needed here, handled in code-behind -->
                            <!-- SyntaxHighlighting="XML" -->
                    </Border>
                </Grid>
            </Grid>
            <!-- Center Panel: Canvas -->
            <Border Grid.Column="1"
                    BorderBrush="DarkGray" BorderThickness="1"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    Background="#FEFEFE"
                    ClipToBounds="True"> <!-- Ensure drawing stays within border -->
                    <!-- Bind the custom control's data and Wall-E position -->
                <ctrl:PixelCanvasControl CanvasData="{Binding PixelCanvas}"
                                         AxisThickness="25" 
                                         AxisBackground="LightSteelBlue" 
                                         AxisForeground="Black"
                                         WallEX="{Binding WallEX}"
                                         WallEY="{Binding WallEY}" />
            </Border>
            <Grid Grid.Column="1" Width="20">  
            <!-- Right Panel: Maybe Info/Output later -->
            <TextBlock Text="Output/Info" Foreground="Gray" IsVisible="False"/>
            </Grid>
            <!-- Bottom Status Bar (using Border and TextBlock) -->
        </Grid>
        <Border Grid.Row="2"
                BorderBrush="LightGray" BorderThickness="0,1,0,0"
                Padding="5,3" Margin="0,10,0,0" Background="{DynamicResource ResourceKey=PrimaryBackgroundGradient}">
                <!-- Example Status Text - bind to a ViewModel property later -->
                <TextBlock Text="{Binding StatusText, FallbackValue='Ready'}"  Foreground="{Binding StatusBarBrush}" VerticalAlignment="Center"/>
                <!-- You could add more items in a StackPanel inside the Border -->
        </Border>
    </Grid>
</Window>