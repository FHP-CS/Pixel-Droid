<!-- Views/MainWindow.axaml -->
<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:PixelWallE.ViewModels"  
        xmlns:ctrl="using:PixelWallE.Controls"
        xmlns:avedit="clr-namespace:AvaloniaEdit;assembly=AvaloniaEdit"
        xmlns:rend="clr-namespace:AvaloniaEdit.Rendering;assembly=AvaloniaEdit"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="600"
        x:Class="PixelWallE.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="Pixel Wall-E">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext please modify the App.axaml.cs file. -->
        <vm:MainWindowViewModel />
    </Design.DataContext>

    <Grid ColumnDefinitions="Auto,*,Auto" Background="{DynamicResource ResourceKey=PrimaryBackgroundGradient}" RowDefinitions="Auto,*,Auto" Margin="10">

        <!-- Top Panel: Controls -->
        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal" Spacing="10" Margin="0,0,0,10">
             <!-- Add Load/Save later -->
            <!-- Temporary Test Button -->
            <Button  Content="Run Test Sequence" Command="{Binding RunTestSequenceCommand}" IsVisible="False"/> <!-- Hide test btn later -->
        </StackPanel>

        <StackPanel Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" HorizontalAlignment="Right" Orientation="Horizontal" Spacing="10" Margin="0,0,0,10">
            <TextBlock Text="Canvas Size:" VerticalAlignment="Center"/>
            <NumericUpDown Value="{Binding CanvasSize}" Minimum="8" Maximum="512" Increment="1" Width="120"/>
            <Button Content="↺ Resize" Background="{DynamicResource ResourceKey=ButtonGradient}" Command="{Binding ApplyResizeCommand}"/>
        </StackPanel> 

        <Grid Grid.Column="0" Grid.Row="1" RowDefinitions="*,*" Background="{DynamicResource ResourceKey=PrimaryBackgroundGradient}">
            <!-- Left Panel: Text Editor (Basic for now) -->
            <StackPanel Grid.Row="1"  Orientation="Vertical" Spacing="5" Margin="0,0,0,10">
                <Button Content="⏏️ Run"  Width="50" Height="20" Padding="3,0" Margin="10,0" HorizontalAlignment="Left" Background="{DynamicResource ResourceKey=ButtonGradient}" Command="{Binding ExecuteCodeCommand}"/>
                <Border Grid.Row="1"
                        BorderThickness="1"
                        BorderBrush="DarkGray"
                        Background="#2e3140"
                        CornerRadius="8"
                        MinWidth="300"
                        Margin="0,0,10,0">
                    <avedit:TextEditor
                        x:Name="CodeEditor"
                        FontFamily="Consolas,Menlo,Monospace"
                        FontSize="13"
                        Foreground="#D3D3D3"
                        Background="Transparent"
                        ShowLineNumbers="True"
                        LineNumbersForeground="#888888"
                        Padding="5,0" 
                        BorderThickness="0"
                        WordWrap="False"
                        HorizontalScrollBarVisibility="Auto"
                        VerticalScrollBarVisibility="Auto"
                         SyntaxHighlighting="XML" /> <!-- No binding needed here, handled in code-behind -->
                    <!-- SyntaxHighlighting="XML" -->
                </Border>
            </StackPanel>
        </Grid>
        

        <!-- Center Panel: Canvas -->
        <Border Grid.Row="1" Grid.Column="1"
                BorderBrush="DarkGray" BorderThickness="1"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                Background="#FEFEFE"
                ClipToBounds="True"> <!-- Ensure drawing stays within border -->
            <!-- Bind the custom control's data and Wall-E position -->
            <ctrl:PixelCanvasControl CanvasData="{Binding PixelCanvas}"
                                     AxisThickness="25" 
                                     AxisBackground="LightSteelBlue" 
                                     AxisForeground="Black"
                                     WallEX="{Binding WallEX}"
                                     WallEY="{Binding WallEY}" />
        </Border>
        <Grid Grid.Row="1" Grid.Column="2" Width="10">  
            <!-- Right Panel: Maybe Info/Output later -->
            <TextBlock Text="Output/Info" Foreground="Gray" IsVisible="False"/>
        </Grid>
        <!-- Bottom Status Bar (using Border and TextBlock) -->
        <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3"
                BorderBrush="LightGray" BorderThickness="0,1,0,0"
                Padding="5,3" Margin="0,10,0,0" Background="{DynamicResource ResourceKey=PrimaryBackgroundGradient}">
            <!-- Example Status Text - bind to a ViewModel property later -->
            <TextBlock Text="{Binding StatusText, FallbackValue='Ready'}" VerticalAlignment="Center"/>
            <!-- You could add more items in a StackPanel inside the Border -->
        </Border>

    </Grid>
</Window>